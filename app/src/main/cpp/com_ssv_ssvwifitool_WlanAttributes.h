/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ssv_ssvwifitool_WlanAttributes */

#ifndef _Included_com_ssv_ssvwifitool_WlanAttributes
#define _Included_com_ssv_ssvwifitool_WlanAttributes
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    helloString
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_helloString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    rf_calibration
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1calibration
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    reg_rw_open
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_reg_1rw_1open
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    reg_rw_close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_reg_1rw_1close
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    channel_change
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_channel_1change
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    data_rate_change
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_data_1rate_1change
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    freq_offset
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_freq_1offset
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    start_tx_frame
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_start_1tx_1frame
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    IQ_change
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_IQ_1change
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    stop_tx_frame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_stop_1tx_1frame
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    set_dac
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_set_1dac
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    start_rx_frame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_start_1rx_1frame
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    reset_rx_counters
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_reset_1rx_1counters
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    retrieve_rx_frame_statistic
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_retrieve_1rx_1frame_1statistic
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    get_rssi
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_get_1rssi
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    get_ptks
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_get_1ptks
  (JNIEnv *, jobject);

/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes
 * Method:    get_err
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_get_1err
  (JNIEnv *, jobject);


/*   -------------------------------------------------------------------------------
 * Class:     com_ssv_ssvwifitool_WlanAttributes_rf1_1stop
 * Method:    rf_stop
 * Signature: (v)
 */
 JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1stop
   (JNIEnv *, jobject);


   /*   -------------------------------------------------------------------------------
    * Class:     com_ssv_ssvwifitool_WlanAttributes_rf1_1stop
    * Method:    char rf_set_channel(int channel,int bw40);
    * Signature: (v)
    */
    JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1set_1channel
      (JNIEnv *, jobject,jint,jint);


/*
 * Class:     com_ssv_ssvwifitool_WlanAttributes_rf1_1stop
 * Method:    void rf_start_TX(int channel,char bw40, int Data_rate)
 * Signature: (v)
 */
 JNIEXPORT jint JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1start_1TX
   (JNIEnv *, jobject, jint, jint, jint);

 /*
  * Class:     com_ssv_ssvwifitool_WlanAttributes_rf1_1stop
  * Method:    void rf_start_RX(int channel)
  * Signature: (v)
  */
  JNIEXPORT void JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1start_1RX
    (JNIEnv *, jobject, jint);


/*
      * Class:     com_ssv_ssvwifitool_WlanAttributes_rf_1set_1rate
      * Method:    void rf_set_rate(int index)
      * Signature: (v)
      */
      JNIEXPORT jchar JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1set_1rate
        (JNIEnv *, jobject, jint);

 /*
       * Class:     com_ssv_ssvwifitool_WlanAttributes_rf_1set_1count
       * Method:    void rf_set_count(int val)
       * Signature: (v)
       */
       JNIEXPORT jchar JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1set_1count
         (JNIEnv *, jobject, jint);


  /*
        * Class:     com_ssv_ssvwifitool_WlanAttributes_rf_1reset
        * Method:    void rf_reset(int val)
        * Signature: (v)
        */
        JNIEXPORT jchar JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_rf_1reset
          (JNIEnv *, jobject);

   /*
         * Class:     com_ssv_ssvwifitool_WlanAttributes_cli_1write
         * Method:    void cli_write(char *)
         * Signature: (v)
         */
         JNIEXPORT jchar JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_cli_1write
           (JNIEnv *, jobject, jstring);

/*
* Class:     com_ssv_ssvwifitool_WlanAttributes_cli_1read
* Method:    void cli_read(char *)
* Signature: (v)
*/
JNIEXPORT jstring JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_cli_1read
            (JNIEnv *, jobject);

JNIEXPORT jboolean JNICALL Java_com_ssv_ssvwifitool_WlanAttributes_check_1wifi_1driver_1load
            (JNIEnv *, jobject);

    //bool checkWifiDeriver(void);
    //char rf_write_cmd(const char *cmd);
    //void rf_start_RX(int channel);
    //void rf_start_TX(int channel,char bw40, int Data_rate);
    //void rf_stop(void);
    //char rf_set_channel(int channel,char bw40);
    //char rf_set_rate(int index);
    //char rf_set_count(int val);
    //char rf_reset(void);
    //char cli_write(char *cmd);
    //char cli_read(char* out, int len);


#ifdef __cplusplus
}
#endif
#endif
